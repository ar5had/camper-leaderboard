// Board
// ----> Table
// --------> CategoryRow
// ------------> Row
// --------> DataRows
// ------------> Row
var Board = React.createClass({
  render: function() {
    return (
      <div className="container board">
        <h3 className="heading">FCC Leaderboard</h3>
        <Table />
      </div>
    );
  }
});

var Table = React.createClass({
  render: function() {
    return (
      <div className="mainTable">
        <CategoryRow />
        <DataRows />
      </div>
    );
  }
});

var DataRows = React.createClass({
  getData: function() {
    var react_this = this;
    $.get("https://fcctop100.herokuapp.com/api/fccusers/top/recent",function(data, status){
      react_this.sortData(data, "recent")
      console.log("Status for recent list:", status);
    });
    $.get("https://fcctop100.herokuapp.com/api/fccusers/top/alltime",function(data, status){
      react_this.sortData(data, "alltime")
      console.log("Status for all time list:", status);
    });
  },
  sortData: function(data, sortDataType) {
    if(sortDataType === "recent") {
      var sortedData = data.sort(function(a, b) {
        return b.recent - a.recent;
      });
      this.setState({recentList: sortedData});
    } else if(sortDataType === "alltime") {
      var sortedData = data.sort(function(a, b) {
        return b.alltime - a.alltime;
      });
      this.setState({allTimeList: sortedData});
    }
  },
  getInitialState: function() {
    return {show: "alltime", recentList: [], allTimeList: []}
  },
  componentDidMount: function() {
    this.getData();
  },
  render: function() {
    var rows = [];
    if (this.state.show === "recent") {
      this.state.recentList.forEach(function(elem, i){
        rows.push(<Row index={i + 1} name={elem.username} lastMonthPoints={elem.recent}
        totalPoints={elem.alltime} imgLink={elem.img} type="dataRow"/>);
      });  
    } else {
      this.state.allTimeList.forEach(function(elem, i){
        rows.push(<Row index={i + 1} name={elem.username} lastMonthPoints={elem.recent}
        totalPoints={elem.alltime} imgLink={elem.img} type="dataRow"/>);
      });  
    }
    return (
      <div className="dataRows"> 
        {rows}
      </div>
    );
  }
});

var CategoryRow = React.createClass({
  render: function() {
    return (
      <Row index="#" name="Camper" lastMonthPoints="Recent points"
        totalPoints="Total points" type="category" imgLink=""/>
    );
  }
});

var Row = React.createClass({
  getClasses: function(classes) {
    return (classes + " " + this.props.type);
  },
  render: function() {
    return (
      <div className="row">
          <div className={this.getClasses("col-xs-1")}>
            <p>{this.props.index}</p>
          </div>
          <div className={this.getClasses("col-xs-5")}>
            <p>
              <span>
                <img src={this.props.imgLink} className="userImg"/>
              </span>
              {this.props.name}
            </p>
          </div>
          <div className={this.getClasses("col-xs-3")}>
            <p>{this.props.lastMonthPoints}</p>
          </div>
          <div className={this.getClasses("col-xs-3")}>
            <p>{this.props.totalPoints}</p>
          </div>
      </div>
    );
  }
});

ReactDOM.render(
  <Board />,
  document.getElementById("app")
);